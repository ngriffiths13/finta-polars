[tool.poetry]
name = "finta-polars"
version = "0.1.0"
description = ""
authors = ["Nelson Griffiths <nelsongriffiths123@gmail.com>"]
readme = "README.md"
packages = [{include = "finta_polars"}]

[tool.poetry.dependencies]
python = ">=3.10"
polars = "^0.17.9"

[tool.poetry.group.dev.dependencies]
finta = "^1.3"
pytest = "^7.3.1"
nox = "^2023.4.22"
pytest-benchmark = "^4.0.0"
black = "^23.3.0"
ruff = "^0.0.263"
pre-commit = "^3.2.2"
pyarrow = "^11.0.0"
pytest-cov = "^4.0.0"
pandas-ta = "^0.3.14b0"
ta-lib = "^0.4.26"

[tool.ruff]
select = ["E", "F", "I", "N", "D", "RUF"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "tests"
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.pytest.ini_options]
testpaths = 'tests'
# min, max, mean, stddev, median, iqr, outliers, ops, rounds, iterations
addopts = [
    '--benchmark-columns', 'min,mean,stddev,outliers,rounds,iterations',
    '--benchmark-group-by', 'group',
    '--benchmark-warmup', 'on',
    '--benchmark-disable',  # this is enable by `make benchmark` when you actually want to run benchmarks
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
